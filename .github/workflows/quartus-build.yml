name: JVS Submodule Quartus Compilation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quartus-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: RndMnkIII/JVS_Debugger
        ref: jvs_submodule
        path: JVS_Debugger
        submodules: 'recursive'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libc6-i386 lib32z1 lib32ncurses6 libbz2-1.0 libxext6 libxft2 libxi6 libxtst6
    
    - name: Install Quartus Prime Lite
      run: |
        # Download and install Quartus Lite
        wget -q https://downloads.intel.com/akdlm/software/acdsinst/24.1std/1077/qinst/qinst-lite-linux-24.1std-1077.run
        chmod +x qinst-lite-linux-24.1std-1077.run
        
        # Extract and install automatically
        ./qinst-lite-linux-24.1std-1077.run --accept --quiet --nox11 --target $HOME/quartus_temp
        
        # Run the installer with help to see options
        cd $HOME/quartus_temp
        ./qinst.sh --help || true
        
        # Install with proper parameters
        ./qinst.sh --cli --download-dir /tmp --install-dir /opt/quartus --accept-eula
        
        # Find Quartus installation
        find /opt -name "quartus_sh" -type f 2>/dev/null || echo "quartus_sh not found in /opt"
        find $HOME -name "quartus_sh" -type f 2>/dev/null || echo "quartus_sh not found in HOME"
        
        # Set environment variables for Quartus
        echo "QUARTUS_ROOTDIR=/opt/quartus/quartus" >> $GITHUB_ENV
        echo "PATH=/opt/quartus/quartus/linux64:/opt/quartus/quartus/bin:$PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/opt/quartus/quartus/linux64:/opt/quartus/quartus/linux64/lib" >> $GITHUB_ENV
    
    - name: Compile JVS project
      run: |
        # Set up environment
        export LD_LIBRARY_PATH="/opt/quartus/quartus/linux64:/opt/quartus/quartus/linux64/lib:$LD_LIBRARY_PATH"
        export PATH="/opt/quartus/quartus/linux64:/opt/quartus/quartus/bin:$PATH"
        
        # Verify Quartus is working
        echo "‚úÖ Testing quartus_sh..."
        quartus_sh --version || echo "Version check failed but continuing..."
        
        # Run compilation
        echo "üöÄ Starting compilation..."
        cd JVS_Debugger/src/fpga
        quartus_sh --flow compile JVS_Debugger
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: jvs-debugger-outputs
        path: |
          JVS_Debugger/src/fpga/output_files/
          JVS_Debugger/src/fpga/*.rpt
          JVS_Debugger/src/fpga/*.summary
        retention-days: 30
    
    - name: Check compilation result
      run: |
        if [ -f "JVS_Debugger/src/fpga/output_files/JVS_Debugger.rbf" ]; then
          echo "‚úÖ JVS_Debugger compilation successful"
        else
          echo "‚ùå JVS_Debugger compilation failed"
          exit 1
        fi